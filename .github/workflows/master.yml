name: CRAWLER - Sandbox

on:
  push:
    branches:
      - master-lock
  workflow_dispatch:
    inputs:
      swithToProdMod:
        description: 'Build to Production'
        required: true
        default: 'Production'

# Environment variables available to all jobs and steps in this workflow 1233
env:
  REPO_NAME: crawler
  CDK8S_ENV: production

  HARBOR_REGISTRY_SECRETS: ${{ secrets.PROD_HARBOR_REGISTRY_SECRETS }}
  HARBOR_REGISTRY_UNAME: ${{ secrets.PROD_HARBOR_REGISTRY_UNAME }}
  HARBOR_REGISTRY_URL: registry101-vn-south.hlcdn.net
  HARBOR_REPO: registry101-vn-south.hlcdn.net/messenger/api.crawler:latest
  KUBE_CTX: live-messenger-context

  HOST_RUNNER_PATH: ${{ secrets.HOST_RUNNER_PATH }}
  HOST_RUNNER_SECRETS: ${{ secrets.HOST_RUNNER_SECRETS }}

  GRPC_SERVER_OWNER: ${{ secrets.PROD_GRPC_SERVER_OWNER }}
  TENOR_TOKEN: ${{ secrets.PROD_TENOR_TOKEN }}
  GIPHY_TOKEN: ${{ secrets.PROD_GIPHY_TOKEN }}
  REDIS_STORE: ${{ secrets.PROD_REDIS_STORE }}
  FB_APP_ID: ${{ secrets.PROD_FB_APP_ID }}
  FB_CLIENT_TOKEN: ${{ secrets.PROD_FB_CLIENT_TOKEN }}
  SENTRY_DSN: ${{ secrets.PROD_SENTRY_DSN }}

jobs:
  setup-build-publish-deploy:
    name: Clone, Build, Publish, and Deploy to K8s
    runs-on: self-hosted

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      # Dispatch to Production
      - name: Dispatch to Production
        if: github.event.inputs.swithToProdMod == 'Production'
        uses: mvasigh/dispatch-action@main
        with:
          token: ${{ secrets.DISPATCH_SECRETS }}
          event_type: production_push

      # Prepare env-prepare
      - name: Prepare Enviroment
        if: github.event.inputs.swithToProdMod != 'Production'
        run: |
          chmod +x .gh-build/env-prepare
          .gh-build/env-prepare

      # Set Permission
      - name: Set Permission
        if: github.event.inputs.swithToProdMod != 'Production'
        run: |
          chmod +x .gh-build/build
          echo ${HARBOR_REPO}

      # Build
      - name: Build Harbor Image
        if: github.event.inputs.swithToProdMod != 'Production'
        run: |
          .gh-build/build ${GITHUB_SHA}

      # Build CDK8s chart
      - name: Build CDK8s chart
        if: github.event.inputs.swithToProdMod != 'Production'
        run: |
          cd .cdk8s && yarn && yarn compile && yarn synth -c ${REPO_NAME} -e ${CDK8S_ENV} -r ${HARBOR_REPO} && cd ..

      # Deploy Harbor Image to K8s
      - name: Deploy to K8s
        if: github.event.inputs.swithToProdMod != 'Production'
        run: |
          chmod +x .gh-build/k8s-remove-resource
          .gh-build/k8s-remove-resource
          echo ${HOST_RUNNER_SECRETS} | sudo -S -k kubectl apply -f .cdk8s/cdk8s/msgr.k8s.yaml